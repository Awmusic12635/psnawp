<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="1" skipped="0" tests="21" time="1.510" timestamp="2022-09-26T00:19:12.318883" hostname="fv-az502-646"><testcase classname="tests.unit_tests.test_client" name="test_client__authentication" time="0.038" /><testcase classname="tests.unit_tests.test_client" name="test_client__online_id" time="0.484" /><testcase classname="tests.unit_tests.test_client" name="test_client__account_id" time="0.017" /><testcase classname="tests.unit_tests.test_client" name="test_client__get_profile_legacy" time="0.033" /><testcase classname="tests.unit_tests.test_client" name="test_client__account_devices" time="0.017"><failure message="vcr.errors.CannotOverwriteExistingCassetteException: Can't overwrite existing cassette ('tests/unit_tests/cassettes/test_client__account_devices.yaml') in your current record mode ('once').&#10;No match for the request (&lt;Request (GET) https://dms.api.playstation.com/api/v1/devices/accounts/me?includeFields=device%2CsystemData&amp;platform=PS5%2CPS4%2CPS3%2CPSVita&gt;) was found.&#10;Found 1 similar requests with 1 different matcher(s) :&#10;&#10;1 - (&lt;Request (GET) https://dms.api.playstation.com/api/v1/devices/accounts/me&gt;).&#10;Matchers succeeded : ['method']&#10;Matchers failed :&#10;uri - assertion failure :&#10;https://dms.api.playstation.com/api/v1/devices/accounts/me?includeFields=device%2CsystemData&amp;platform=PS5%2CPS4%2CPS3%2CPSVita != https://dms.api.playstation.com/api/v1/devices/accounts/me">psnawp_fixture = &lt;psnawp_api.psnawp.PSNAWP object at 0x7fe1630dd6c0&gt;

    @pytest.mark.vcr()
    def test_client__account_devices(psnawp_fixture):
        with my_vcr.use_cassette(f"{inspect.currentframe().f_code.co_name}.yaml"):
            client = psnawp_fixture.me()
&gt;           client.get_account_devices()

tests/unit_tests/test_client.py:42: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/hostedtoolcache/Python/3.10.6/x64/lib/python3.10/site-packages/psnawp_api/models/client.py:181: in get_account_devices
    response = self.request_builder.get(
/opt/hostedtoolcache/Python/3.10.6/x64/lib/python3.10/site-packages/psnawp_api/utils/request_builder.py:74: in get
    response = requests.get(
/opt/hostedtoolcache/Python/3.10.6/x64/lib/python3.10/site-packages/requests/api.py:73: in get
    return request("get", url, params=params, **kwargs)
/opt/hostedtoolcache/Python/3.10.6/x64/lib/python3.10/site-packages/requests/api.py:59: in request
    return session.request(method=method, url=url, **kwargs)
/opt/hostedtoolcache/Python/3.10.6/x64/lib/python3.10/site-packages/requests/sessions.py:587: in request
    resp = self.send(prep, **send_kwargs)
/opt/hostedtoolcache/Python/3.10.6/x64/lib/python3.10/site-packages/requests/sessions.py:701: in send
    r = adapter.send(request, **kwargs)
/opt/hostedtoolcache/Python/3.10.6/x64/lib/python3.10/site-packages/requests/adapters.py:489: in send
    resp = conn.urlopen(
/opt/hostedtoolcache/Python/3.10.6/x64/lib/python3.10/site-packages/urllib3/connectionpool.py:703: in urlopen
    httplib_response = self._make_request(
/opt/hostedtoolcache/Python/3.10.6/x64/lib/python3.10/site-packages/urllib3/connectionpool.py:440: in _make_request
    httplib_response = conn.getresponse(buffering=True)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;vcr.patch.VCRRequestsHTTPSConnectiontests/unit_tests/cassettes/test_client__account_devices.yaml object at 0x7fe1630c9ab0&gt;
_ = False, kwargs = {'buffering': True}

    def getresponse(self, _=False, **kwargs):
        """Retrieve the response"""
        # Check to see if the cassette has a response for this request. If so,
        # then return it
        if self.cassette.can_play_response_for(self._vcr_request):
            log.info("Playing response for {} from cassette".format(self._vcr_request))
            response = self.cassette.play_response(self._vcr_request)
            return VCRHTTPResponse(response)
        else:
            if self.cassette.write_protected and self.cassette.filter_request(self._vcr_request):
&gt;               raise CannotOverwriteExistingCassetteException(
                    cassette=self.cassette, failed_request=self._vcr_request
                )
E               vcr.errors.CannotOverwriteExistingCassetteException: Can't overwrite existing cassette ('tests/unit_tests/cassettes/test_client__account_devices.yaml') in your current record mode ('once').
E               No match for the request (&lt;Request (GET) https://dms.api.playstation.com/api/v1/devices/accounts/me?includeFields=device%2CsystemData&amp;platform=PS5%2CPS4%2CPS3%2CPSVita&gt;) was found.
E               Found 1 similar requests with 1 different matcher(s) :
E               
E               1 - (&lt;Request (GET) https://dms.api.playstation.com/api/v1/devices/accounts/me&gt;).
E               Matchers succeeded : ['method']
E               Matchers failed :
E               uri - assertion failure :
E               https://dms.api.playstation.com/api/v1/devices/accounts/me?includeFields=device%2CsystemData&amp;platform=PS5%2CPS4%2CPS3%2CPSVita != https://dms.api.playstation.com/api/v1/devices/accounts/me

/opt/hostedtoolcache/Python/3.10.6/x64/lib/python3.10/site-packages/vcr/stubs/__init__.py:231: CannotOverwriteExistingCassetteException</failure></testcase><testcase classname="tests.unit_tests.test_client" name="test_client__get_friends" time="0.298" /><testcase classname="tests.unit_tests.test_client" name="test_client__available_to_play" time="0.041" /><testcase classname="tests.unit_tests.test_client" name="test_client__blocked_list" time="0.018" /><testcase classname="tests.unit_tests.test_client" name="test_client__repr_and_str" time="0.057" /><testcase classname="tests.unit_tests.test_user" name="test_user__user" time="0.018" /><testcase classname="tests.unit_tests.test_user" name="test_user__user_account_id" time="0.018" /><testcase classname="tests.unit_tests.test_user" name="test_user__user_no_argument" time="0.010" /><testcase classname="tests.unit_tests.test_user" name="test_user__user_wrong_acc_id" time="0.010" /><testcase classname="tests.unit_tests.test_user" name="test_user__prev_online_id" time="0.019" /><testcase classname="tests.unit_tests.test_user" name="test_user__user_not_found" time="0.012" /><testcase classname="tests.unit_tests.test_user" name="test_user__user_acct_id_not_found" time="0.012" /><testcase classname="tests.unit_tests.test_user" name="test_user__get_presence" time="0.026" /><testcase classname="tests.unit_tests.test_user" name="test_user__get_presence_forbidden" time="0.026" /><testcase classname="tests.unit_tests.test_user" name="test_user__friendship" time="0.025" /><testcase classname="tests.unit_tests.test_user" name="test_user__is_blocked" time="0.025" /><testcase classname="tests.unit_tests.test_user" name="test_user__repr_and_str" time="0.020" /></testsuite></testsuites>